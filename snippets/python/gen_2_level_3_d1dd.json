{
  "title": "gen_2_level_3_d1dd",
  "code": "```python\ndef is_palindrome(word: str) -> bool:\n    \"\"\"\n    Check if the given word is a palindrome.\n    A palindrome reads the same backward as forward.\n\n    Args:\n        word (str): The word to check.\n\n    Returns:\n        bool: True if word is a palindrome, False otherwise.\n    \"\"\"\n    # Normalize the word to lowercase to make the check case-insensitive\n    normalized_word = word.lower()\n    # Compare the string with its reverse\n    return normalized_word == normalized_word[::-1]\n\n\n# Example usage:\nif __name__ == \"__main__\":\n    test_words = [\"Racecar\", \"Python\", \"level\", \"world\", \"Deified\"]\n    for w in test_words:\n        print(f\"{w}: {is_palindrome(w)}\")\n```",
  "description": "Write a function to check if a word is a palindrome.",
  "tags": [
    "AI",
    "chamber",
    "level-3"
  ],
  "created_at": "2025-06-11T09:42:52.998760"
}