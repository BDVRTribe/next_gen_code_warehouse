{
  "title": "gen_25_level_0_e258",
  "code": "Sure! Let me create a palindrome checker function that not only checks if a word reads the same forwards and backwards but also handles some interesting edge cases, like ignoring case, spaces, and punctuation \u2014 making it a more versatile palindrome detector.\n\nHere's a fresh approach using Python\u2019s `filter` and `str.isalnum` to preprocess input in a functional style:\n\n```python\ndef is_palindrome(word: str) -> bool:\n    # Normalize by filtering alphanumeric characters and converting to lowercase\n    filtered_chars = filter(str.isalnum, word.lower())\n    filtered_word = ''.join(filtered_chars)\n    # Check if the filtered word is the same reversed\n    return filtered_word == filtered_word[::-1]\n\n# Examples\nprint(is_palindrome(\"Racecar\"))       # True\nprint(is_palindrome(\"A man, a plan, a canal: Panama\"))  # True\nprint(is_palindrome(\"hello\"))         # False\n```\n\nThis function goes beyond basic palindrome checks and works well for phrases with punctuation and spaces.",
  "description": "Write a function to check if a word is a palindrome.",
  "tags": [
    "AI",
    "chamber",
    "level-0"
  ],
  "created_at": "2025-06-11T09:46:06.958398"
}