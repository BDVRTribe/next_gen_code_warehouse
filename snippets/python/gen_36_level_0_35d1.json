{
  "title": "gen_36_level_0_35d1",
  "code": "```python\ndef is_palindrome(word: str) -> bool:\n    \"\"\"\n    Check if the given word is a palindrome.\n\n    This function ignores case and non-alphanumeric characters,\n    allowing it to work robustly with phrases or words containing punctuation.\n\n    Args:\n        word (str): The input string to check.\n\n    Returns:\n        bool: True if word is a palindrome, False otherwise.\n    \"\"\"\n    filtered = ''.join(char.lower() for char in word if char.isalnum())\n    return filtered == filtered[::-1]\n```\n\n**Explanation:**  \n- This function first normalizes the input by converting to lowercase and filtering out any non-alphanumeric characters.  \n- It then checks if the cleaned string reads the same forwards and backwards.  \n- This approach generalizes palindrome checking beyond simple words to more complex inputs, such as phrases or sentences.",
  "description": "Write a function to check if a word is a palindrome.",
  "tags": [
    "AI",
    "chamber",
    "level-0"
  ],
  "created_at": "2025-06-11T09:47:17.696127"
}