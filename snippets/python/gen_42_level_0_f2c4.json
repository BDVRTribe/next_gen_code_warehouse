{
  "title": "gen_42_level_0_f2c4",
  "code": "Here's a palindrome checker function with a twist \u2014 it ignores case, spaces, and punctuation, allowing it to detect palindromes in phrases, not just single words:\n\n```python\nimport string\n\ndef is_palindrome(text: str) -> bool:\n    # Normalize text: lowercase, remove spaces and punctuation\n    normalized = ''.join(\n        ch.lower() for ch in text if ch.isalnum()\n    )\n    # Check palindrome by comparing to its reverse\n    return normalized == normalized[::-1]\n\n# Examples\nprint(is_palindrome(\"Racecar\"))           # True\nprint(is_palindrome(\"A man, a plan, a canal, Panama\"))  # True\nprint(is_palindrome(\"Hello\"))             # False\n```\n\nWould you like me to explore palindromes in other alphabets or with more exotic transformations?",
  "description": "Write a function to check if a word is a palindrome.",
  "tags": [
    "AI",
    "chamber",
    "level-0"
  ],
  "created_at": "2025-06-11T09:47:50.569263"
}